{
	"@metadata": {
		"name": "bit32",
		"comment": "The library is not imported as default, it is \"required\", and can not be identified unless intellisense is active.",
		"authors": [
			"Jeblad"
		]
	},
	"bit32 001": {
		"prefix": "band( ... )",
		"body": [
			"band( ${1:...} )$0"
		],
		"description": "bit32.band( ... )\n bitwise 'and' of all arguments"
	},
	"bit32 002": {
		"prefix": "bnot( ... )",
		"body": [
			"bnot( ${1:x} )$0"
		],
		"description": "bit32.bnot( x )\n x - bitwise complement"
	},
	"bit32 003": {
		"prefix": "bor( ... )",
		"body": [
			"bor( ${1:...} )$0"
		],
		"description": "bit32.bor( ... )\n bitwise 'or' of all arguments"
	},
	"bit32 004": {
		"prefix": "btest( ... )",
		"body": [
			"btest( ${1:...} )$0"
		],
		"description": "bit32.btest( ... )\n bitwise 'and' of all arguments followed by logical complement"
	},
	"bit32 005": {
		"prefix": "bxor( ... )",
		"body": [
			"bxor( ${1:...} )$0"
		],
		"description": "bit32.bxor( ... )\n bitwise 'xor' of all arguments"
	},
	"bit32 006": {
		"prefix": "extract( n, field, width)",
		"body": [
			"extract( ${1:n}, ${2:field}${3:, ${4:width}} )$0"
		],
		"description": "bit32.extract( n, field[, width] )\n n - number to use as source\n field - index to start\n width - number of bits to process"
	},
	"bit32 007": {
		"prefix": "replace( n, v, field, width)",
		"body": [
			"replace( ${1:n}, ${2:v}, ${3:field}${4:, ${5:width}} )$0"
		],
		"description": "bit32.replace( n, v, field[, width] )\n n - number to use as source\n v - number to use as replacement\n field - index to start\n width - number of bits to process"
	},
	"bit32 008": {
		"prefix": "lshift( n, disp )",
		"body": [
			"lshift( ${1:n}, ${2:disp} )$0"
		],
		"description": "bit32.lshift( n, disp )\n n - number to use as source\n disp - number of bits to displace"
	},
	"bit32 009": {
		"prefix": "rshift( n, disp )",
		"body": [
			"rshift( ${1:n}, ${2:disp} )$0"
		],
		"description": "bit32.rshift( n, disp )\n n - number to use as source\n disp - number of bits to displace"
	},
	"bit32 010": {
		"prefix": "arshift( n, disp )",
		"body": [
			"arshift( ${1:n}, ${2:disp} )$0"
		],
		"description": "bit32.arshift( n, disp )\n n - number to use as source\n disp - number of bits to displace"
	},
	"bit32 011": {
		"prefix": "lrotate( n, disp )",
		"body": [
			"lrotate( ${1:n}, ${2:disp} )$0"
		],
		"description": "bit32.lrotate( n, disp )\n n - number to use as source\n disp - number of bits to displace"
	},
	"bit32 012": {
		"prefix": "rrotate( n, disp )",
		"body": [
			"rrotate( ${1:n}, ${2:disp} )$0"
		],
		"description": "bit32.rrotate( n, disp )\n n - number to use as source\n disp - number of bits to displace"
	}
}