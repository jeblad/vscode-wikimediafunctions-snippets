{
	"@metadata": {
		"name": "util",
		"comment": "The library is not imported as default, it is \"required\", and can not be identified unless intellisense is active.",
		"authors": [
			"Jeblad"
		]
	},
	"util 001": {
		"prefix": "checkType( name, argIdx, arg, expectType, nilOk )",
		"body": [
			"checkType( ${1:name}, ${2:argIdx}, ${3:arg}, ${4:expectType}, ${5:nilOk} )$0"
		],
		"description": "libraryUtil.checkType( name, argIdx, arg, expectType, nilOk )\n name - string identifying the calling function\n argIdx - position of the argument\n arg - value to be type checked\n expectType - string type to be accepted\n nilOk - accept nil as type"
	},
	"util 002": {
		"prefix": "checkTypeMulti( name, argIdx, arg, expectTypes )",
		"body": [
			"checkTypeMulti( ${1:name}, ${2:argIdx}, ${3:arg}, ${4:expectTypes} )$0"
		],
		"description": "libraryUtil.checkTypeMulti( name, argIdx, arg, expectTypes )\n name - string identifying the calling function\n argIdx - position of the argument\n arg - value to be type checked\n expectType - table of types to be accepted"
	},
	"util 003": {
		"prefix": "checkTypeForIndex( index, value, expectType )",
		"body": [
			"checkTypeForIndex( ${1:index}, ${2:value}, ${3:expectType} )$0"
		],
		"description": "libraryUtil.checkTypeForIndex( index, value, expectType )\n index - position in a table\n value - any to be type checked\n expectType - string type to be accepted"
	},
	"util 004": {
		"prefix": "checkTypeForNamedArg( name, argName, arg, expectType, nilOk )",
		"body": [
			"checkTypeForNamedArg( ${1:name}, ${2:argName}, ${3:arg}, ${4:expectType}, ${5:nilOk} )$0"
		],
		"description": "libraryUtil.checkTypeForNamedArg( name, argName, arg, expectType, nilOk )\n name - string identifying the calling function\n argName - position of the argument\n arg - value to be type checked\n expectType - string type to be accepted\n nilOk - accept nil as type"
	},
	"util 005": {
		"prefix": "makeCheckSelfFunction( libraryName, varName, selfObj, selfObjDesc )",
		"body": [
			"makeCheckSelfFunction( ${1:libraryName}, ${2:varName}, ${3:selfObj}, ${4:selfObjDesc} )$0"
		],
		"description": "libraryUtil.makeCheckSelfFunction( libraryName, varName, selfObj, selfObjDesc )\n libraryName - string name\n varName - string name\n selfObj - \n selfObjDesc -"
	}
}